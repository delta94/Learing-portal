{"version":3,"sources":["modules/course/components/Course/TapsCourse.tsx"],"names":["Courses","lazy","useStyles","makeStyles","theme","createStyles","root","width","breakpoints","only","menus","borderRadius","background","justify","placeContent","large","spacing","height","text","overflow","display","textOverflow","fontSize","WebkitLineClamp","WebkitBoxOrient","textCategory","line","borderBottom","palette","secondary","main","paddingBottom","button","float","box","color","PointNavigationMenu","title","classes","React","useState","index","setIndex","history","useHistory","search","useLocation","categoryIndex","parse","path","useRouteMatch","handleClick","i","name","e","push","filterCoursebyCategory","Select","number","SelectWeight","dispatch","useDispatch","categories","useSelector","state","course","useTheme","sm","useMediaQuery","up","useEffect","action","actions","category","parseInt","undefined","container","direction","alignItems","className","fontWeight","map","item","xs","lg","key","onClick","disableRipple","style","thumbnail","backgroundSize","padding","fallback","id"],"mappings":"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","file":"static/js/17.e1580c09.chunk.js","sourcesContent":["import React, { useEffect, Suspense, lazy } from \"react\";\nimport { Box, Grid, IconButton, useMediaQuery } from \"@material-ui/core\";\nimport { useHistory, useRouteMatch, useLocation } from \"react-router-dom\";\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme,\n} from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as actions from \"../../actions\";\nimport { parse } from \"query-string\";\n\nconst Courses = lazy(() => import(\"./CategoryByTapCourses\"));\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& > *\": {\n        width: 80,\n      },\n      [theme.breakpoints.only(\"xs\")]: {\n        width: `100%`,\n      },\n      [theme.breakpoints.only(\"sm\")]: {\n        width: `100%`,\n      },\n    },\n    menus: {\n      width: \"100%\",\n      borderRadius: \"0 0 10px 10px\",\n      background: \"#ffffff\",\n      [theme.breakpoints.only(\"xs\")]: {\n        justify: \"center\",\n        placeContent: \"center\",\n      },\n    },\n    large: {\n      width: theme.spacing(10),\n      height: theme.spacing(10),\n      [theme.breakpoints.only(\"xs\")]: {\n        width: theme.spacing(6),\n        height: theme.spacing(6),\n      },\n    },\n    text: {\n      overflow: \"hidden\",\n      display: \"-webkit-box\",\n      textOverflow: \"ellipsis\",\n      fontSize: 10,\n      WebkitLineClamp: 1,\n      WebkitBoxOrient: \"vertical\",\n    },\n    textCategory: {\n      overflow: \"hidden\",\n      display: \"-webkit-box\",\n      textOverflow: \"ellipsis\",\n      WebkitLineClamp: 1,\n      WebkitBoxOrient: \"vertical\",\n    },\n    line: {\n      display: \"inline-block\",\n      borderBottom: `3px solid ${theme.palette.secondary.main}`,\n      paddingBottom: \"2px\",\n    },\n    button: {\n      float: \"right\",\n    },\n    box: { color: \"rgb(19 39 64)\" },\n  })\n);\n\nexport default function PointNavigationMenu({ title }: { title: string }) {\n  const classes = useStyles();\n  const [index, setIndex] = React.useState(0);\n  const history = useHistory();\n  const { search } = useLocation();\n  const categoryIndex = parse(search);\n\n  const { path } = useRouteMatch();\n  const filterCoursebyCategory = (title: string, name: string) => {\n    history.push(`${path}?category=${title}&name=${name}`);\n  };\n  const handleClick = (i: any, name: any) => (e: React.SyntheticEvent) => {\n    filterCoursebyCategory(i + 1, name);\n    setIndex(i);\n  };\n\n  const Select = (number: number) => {\n    if (number === index) {\n      return \"#f9b122\";\n    }\n  };\n  const SelectWeight = (number: number) => {\n    if (number === index) {\n      return \"bold\";\n    }\n  };\n  const renderLoader = () => <div></div>;\n  const dispatch = useDispatch();\n  const { categories } = useSelector((state: any) => state.course);\n  const theme = useTheme();\n  const sm = useMediaQuery(theme.breakpoints.up(\"lg\"));\n  useEffect(() => {\n    const action = actions.loadCourseCategory();\n    dispatch(action);\n    if (categoryIndex.category !== null) {\n      setIndex(parseInt(`${categoryIndex.category}`) - 1);\n    }\n    if (categoryIndex.category === undefined) {\n      setIndex(0);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify={\"flex-start\"}\n        alignItems=\"center\"\n      >\n        <Box className={classes.box} fontWeight={700} fontSize=\"h4.fontSize\">\n          {title}\n        </Box>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        justify={sm ? \"center\" : \"flex-start\"}\n        alignItems=\"center\"\n      >\n        {categories.map((item: any, i: number) => (\n          <Grid item xs={3} sm={2} lg={1} key={i}>\n            <IconButton\n              onClick={handleClick(i, item.name)}\n              className={classes.root}\n              disableRipple\n              key={i}\n            >\n              <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  alignItems=\"center\"\n                  justify=\"center\"\n                >\n                  <div\n                    style={{\n                      background: `url('${item.thumbnail}')`,\n                      backgroundSize: \"cover\",\n\n                      padding: \"30px\",\n                    }}\n                  />\n                </Grid>\n                <Grid\n                  className={classes.text}\n                  style={{\n                    color: Select(i),\n                    fontWeight: SelectWeight(i),\n                  }}\n                >\n                  {item.name}\n                </Grid>\n              </Grid>\n            </IconButton>\n          </Grid>\n        ))}\n      </Grid>\n      <Suspense fallback={renderLoader()}>\n        <Courses id={index} />\n      </Suspense>\n    </>\n  );\n}\n"],"sourceRoot":""}