{"version":3,"sources":["modules/coursePortal/components/Course/TapsCourse.tsx"],"names":["Courses","lazy","useStyles","makeStyles","theme","createStyles","root","width","breakpoints","only","menus","borderRadius","background","justify","placeContent","large","spacing","height","text","overflow","display","textOverflow","fontSize","WebkitLineClamp","WebkitBoxOrient","textCategory","line","borderBottom","palette","secondary","main","paddingBottom","button","float","box","color","PointNavigationMenu","title","classes","React","useState","index","setIndex","history","useHistory","search","useLocation","categoryIndex","parse","path","useRouteMatch","handleClick","i","name","e","push","filterCoursebyCategory","Select","number","SelectWeight","dispatch","useDispatch","useSelector","state","course","categories","categoryImg","useTheme","sm","useMediaQuery","up","useEffect","action","actions","category","parseInt","undefined","className","fontWeight","container","direction","alignItems","map","item","xs","lg","key","onClick","disableRipple","style","img","backgroundSize","padding","fallback","id"],"mappings":"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","file":"static/js/16.4ce88704.chunk.js","sourcesContent":["import React, { useEffect, Suspense, lazy } from \"react\";\nimport { Box, Grid, IconButton, useMediaQuery } from \"@material-ui/core\";\nimport { useHistory, useRouteMatch, useLocation } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as actions from \"../../actions\"\nimport { parse } from \"query-string\"\n\nconst Courses = lazy(() => import('./CategoryByTapCourses'));\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& > *\": {\n        width: 80,\n      },\n      [theme.breakpoints.only(\"xs\")]: {\n        width: `100%`,\n      },\n      [theme.breakpoints.only(\"sm\")]: {\n        width: `100%`,\n      },\n    },\n    menus: {\n      width: \"100%\",\n      borderRadius: \"0 0 10px 10px\",\n      background: \"#ffffff\",\n      [theme.breakpoints.only(\"xs\")]: {\n        justify: \"center\",\n        placeContent: \"center\",\n      },\n    },\n    large: {\n      width: theme.spacing(10),\n      height: theme.spacing(10),\n      [theme.breakpoints.only(\"xs\")]: {\n        width: theme.spacing(6),\n        height: theme.spacing(6),\n      },\n    },\n    text: {\n      overflow: \"hidden\",\n      display: \"-webkit-box\",\n      textOverflow: \"ellipsis\",\n      fontSize: 10,\n      WebkitLineClamp: 1,\n      WebkitBoxOrient: \"vertical\",\n    },\n    textCategory: {\n      overflow: \"hidden\",\n      display: \"-webkit-box\",\n      textOverflow: \"ellipsis\",\n      WebkitLineClamp: 1,\n      WebkitBoxOrient: \"vertical\",\n    },\n    line: {\n      display: \"inline-block\",\n      borderBottom: `3px solid ${theme.palette.secondary.main}`,\n      paddingBottom: \"2px\",\n    },\n    button: {\n      float: \"right\",\n    },\n    box: { color: \"rgb(19 39 64)\" },\n  })\n);\n\nexport default function PointNavigationMenu({ title }: { title: string }) {\n  const classes = useStyles();\n  const [index, setIndex] = React.useState(0);\n  const history = useHistory();\n  const { search } = useLocation()\n  const categoryIndex = parse(search)\n\n\n\n  const { path } = useRouteMatch();\n  const filterCoursebyCategory = (title: string, name: string) => {\n    history.push(`${path}?category=${title}&&name=${name}`);\n  };\n  const handleClick = (i: any, name: any) => (e: React.SyntheticEvent) => {\n    filterCoursebyCategory(i + 1, name);\n    setIndex(i);\n  };\n\n  const Select = (number: number) => {\n    if (number === index) {\n      return \"#f9b122\";\n    }\n  };\n  const SelectWeight = (number: number) => {\n    if (number === index) {\n      return \"bold\";\n    }\n  };\n  const renderLoader = () =>\n    <div></div>\n  const dispatch = useDispatch();\n  const { categories, categoryImg } = useSelector((state: any) => state.course);\n  const theme = useTheme();\n  const sm = useMediaQuery(theme.breakpoints.up(\"lg\"))\n  useEffect(() => {\n    const action = actions.loadCourseCategory()\n    dispatch(action)\n    if (categoryIndex.category !== null) {\n      setIndex(parseInt(`${categoryIndex.category}`) - 1)\n    } if (categoryIndex.category === undefined) {\n      setIndex(0)\n    }\n    // eslint-disable-next-line\n  }, [])\n\n\n  return (\n    <>\n      <Box className={classes.box} fontWeight={700} fontSize=\"h4.fontSize\">\n        {title}\n      </Box>\n\n\n      <Grid container direction=\"row\" justify={sm ? \"center\" : \"flex-start\"} alignItems=\"center\">\n        {categories.map((item: any, i: number) => (\n          <Grid item xs={3} sm={2} lg={1} key={i}>\n            <IconButton\n              onClick={handleClick(i, item.name)}\n              className={classes.root}\n              disableRipple\n              key={i}\n            >\n              <Grid\n                container\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                <Grid\n                  container\n                  direction=\"row\"\n                  alignItems=\"center\"\n                  justify=\"center\"\n                >\n\n                  < div style={{\n                    background: `url('${categoryImg[i].img}')`,\n                    backgroundSize: \"cover\",\n\n                    padding: \"30px\"\n                  }} />\n                </Grid>\n                <Grid\n                  className={classes.text}\n                  style={{\n                    color: Select(i),\n                    fontWeight: SelectWeight(i),\n                  }}\n                >\n                  {item.name}\n                </Grid>\n              </Grid>\n            </IconButton>\n          </Grid>\n        ))}\n      </Grid>\n      <Suspense fallback={renderLoader()}>\n\n        <Courses id={index} />\n\n\n      </Suspense>\n    </>\n  );\n}\n"],"sourceRoot":""}