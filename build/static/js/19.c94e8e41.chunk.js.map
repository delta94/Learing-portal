{"version":3,"sources":["modules/portal/components/Dialog.tsx","modules/portal/components/LinkPortal.tsx"],"names":["AlertDialog","props","open","setOpen","data","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","officialName","DialogContent","DialogContentText","link","DialogActions","Button","onClick","color","window","location","replace","autoFocus","useStyles","makeStyles","theme","root","flexGrow","marginTop","width","rounded","spacing","height","VariantAvatars","classes","React","useState","value","setValue","setData","useEffect","a","axios","get","fetch","handleClickOpen","className","Tabs","onChange","event","newValue","variant","scrollButtons","TabIndicatorProps","style","background","indicatorColor","undefined","textColor","map","item","index","Tab","key","icon","thumbnail","backgroundSize","padding"],"mappings":"2TAOe,SAASA,EAAYC,GAAa,IACvCC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,QAASC,EAASH,EAATG,KACjBC,EAAc,WAClBF,GAAQ,IAWV,OACE,6BACE,kBAACG,EAAA,EAAD,CACEJ,KAAMA,EACNK,QAASF,EACTG,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAhB,mFACmBP,EAAOA,EAAKQ,aAAe,+FAE9C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBH,GAAG,4BAAtB,8HAC2BP,EAAOA,EAAKW,KAAO,GAD9C,oUAIF,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,QAASb,EAAac,MAAM,WAApC,4BAGA,kBAACF,EAAA,EAAD,CAAQC,QA7BI,WACL,OAATd,GACFgB,OAAOC,SAASC,QAAhB,UAA2BlB,EAAKW,QA2BEI,MAAM,UAAUI,WAAS,GAAvD,+BCnCV,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,UAAW,EACXC,MAAO,QAETC,QAAS,CACPD,MAAOJ,EAAMM,QAAQ,GACrBC,OAAQP,EAAMM,QAAQ,QAIX,SAASE,IACtB,IAAMC,EAAUX,IADuB,EAEbY,IAAMC,SAAS,GAFF,mBAEhCC,EAFgC,KAEzBC,EAFyB,OAGfH,IAAMC,UAAS,GAHA,mBAGhCnC,EAHgC,KAG1BC,EAH0B,OAIfkC,mBAAc,IAJC,mBAIhCjC,EAJgC,KAI1BoC,EAJ0B,KAOvCC,qBAAU,YACG,uCAAG,8BAAAC,EAAA,sEACWC,IAAMC,IAAI,cADrB,gBACJxC,EADI,EACJA,KACRoC,EAAQpC,GAFI,2CAAH,qDAIXyC,KACC,IACH,IAAMC,EAAkB,WAEtB3C,GAAQ,IAQV,OACE,oCACE,yBAAK4C,UAAWZ,EAAQR,MACtB,kBAACqB,EAAA,EAAD,CACEV,MAAOA,EACPW,SAVa,SAACC,EAAYC,GAChCZ,EAASY,IAUHC,QAAQ,aACRC,cAAc,KACdC,kBAAmB,CACjBC,MAAO,CACLC,WAAY,SAGhBC,oBAAgBC,EAChBC,UAAU,WAETvD,EAAKwD,KAAI,SAACC,EAAWC,GAAZ,OACR,kBAACC,EAAA,EAAD,CACEC,IAAKF,EACLG,KACE,yBAAMV,MAAO,CACXC,WAAW,QAAD,OAAUK,EAAKK,WACzBC,eAAgB,QAChBC,QAAS,QAERlD,QAAS4B,WAWtB,kBAAC,EAAD,CAAQ5C,KAAMA,EAAMC,QAASA,EAASC,UAAesD,IAATtD,EAAqBA,EAAKkC,GAAS","file":"static/js/19.c94e8e41.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nexport default function AlertDialog(props: any) {\n  const { open, setOpen, data } = props;\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleAgree = () => {\n    if (data !== null) {\n      window.location.replace(`${data.link}`);\n    }\n\n  };\n\n\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {`กำลังเข้าสู่ ${data ? data.officialName : \"กำลังโหลดข้อมูล\"}`}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {`คุณกำลังเข้าสู่ เว็บ ${data ? data.link : \"\"}หากต้องการเข้าสู่เว็บไซต์นี้กดตกลงหากไม่ต้องการกดกลับ`}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            กลับ\n          </Button>\n          <Button onClick={handleAgree} color=\"primary\" autoFocus>\n            ตกลง\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport axios from \"axios\"\nimport Dialog from \"./Dialog\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 8,\n    width: \"100%\",\n  },\n  rounded: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n\nexport default function VariantAvatars() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = useState<any>([])\n\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { data } = await axios.get('/Platforms')\n      setData(data)\n    }\n    fetch()\n  }, [])\n  const handleClickOpen = () => {\n\n    setOpen(true);\n\n  };\n  const handleChange = (event: any, newValue: any) => {\n    setValue(newValue);\n\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          variant=\"scrollable\"\n          scrollButtons=\"on\"\n          TabIndicatorProps={{\n            style: {\n              background: \"none\",\n            },\n          }}\n          indicatorColor={undefined}\n          textColor=\"primary\"\n        >\n          {data.map((item: any, index: number) =>\n            <Tab\n              key={index}\n              icon={\n                < div style={{\n                  background: `url('${item.thumbnail}`,\n                  backgroundSize: \"cover\",\n                  padding: \"30px\"\n\n                }} onClick={handleClickOpen} />\n\n              }\n            />\n\n\n          )}\n\n\n        </Tabs>\n      </div>\n      <Dialog open={open} setOpen={setOpen} data={data !== undefined ? data[value] : null} />\n    </>\n  );\n}\n"],"sourceRoot":""}