{"ast":null,"code":"var _jsxFileName = \"/Users/ninew/Documents/GitHub/Learing-portal/src/modules/coursePortal/components/Course/GroupAllCourse.tsx\";\nimport React, { useEffect, Suspense, lazy, useState } from \"react\";\nimport { Grid, Divider, Container, CircularProgress, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from \"../../actions\";\nconst CourseDetail = lazy(() => import('./CourseDetails'));\nconst Header = lazy(() => import('../../share/Header'));\nconst SelectCategory = lazy(() => import('../../share/SelectCategory'));\nconst useStyles = makeStyles(theme => ({\n  content: {\n    paddingRight: \"8vw\",\n    paddingLeft: \"8vw\"\n  },\n  divider: {\n    marginBottom: 20\n  },\n  circular: {\n    marginTop: 20\n  },\n  button: {\n    background: theme.palette.primary.main,\n    borderRadius: 40,\n    padding: '15px 30px 15px 30px',\n    margin: 10\n  }\n}));\nexport default function GroupCourse() {\n  const dispatch = useDispatch();\n  const {\n    courses,\n    isLoadingCourses\n  } = useSelector(state => state.course);\n  const classes = useStyles();\n  const postsPerPage = 8;\n  const [postsToShow, setPostsToShow] = useState([]);\n  const [next, setNext] = useState(8);\n\n  const loopWithSlice = (start, end) => {\n    const slicedPosts = courses.slice(start, end);\n    setPostsToShow([...postsToShow, ...slicedPosts]);\n  };\n\n  useEffect(() => {\n    loopWithSlice(0, postsPerPage); // eslint-disable-next-line\n  }, [isLoadingCourses]);\n\n  const handleShowMorePosts = () => {\n    loopWithSlice(next, next + postsPerPage);\n    setNext(next + postsPerPage);\n  };\n\n  useEffect(() => {\n    setPostsToShow([]);\n    const action = actions.loadCourses(\"all\");\n    dispatch(action); // eslint-disable-next-line\n  }, []);\n\n  const renderLoader = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  });\n\n  return /*#__PURE__*/React.createElement(Suspense, {\n    fallback: renderLoader(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    text: \"รายวิชา\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.content,\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"\\u0E04\\u0E2D\\u0E23\\u0E4C\\u0E2A\\u0E40\\u0E23\\u0E35\\u0E22\\u0E19\\u0E17\\u0E31\\u0E49\\u0E07\\u0E2B\\u0E21\\u0E14\"), /*#__PURE__*/React.createElement(SelectCategory, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: isLoadingCourses ? \"center\" : \"flex-start\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, isLoadingCourses && /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"secondary\",\n    className: classes.circular,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 46\n    }\n  }), postsToShow.map((item, index) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    xl: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CourseDetail, {\n    key: index,\n    id: item.id,\n    learningTopic: item.learningTopic,\n    learningObjective: item.learningObjective,\n    courseCategoryId: item.courseCategoryId,\n    thumbnail: item.thumbnail,\n    viewCount: item.viewCount,\n    assessment: item.assessment,\n    targetGroup: item.targetGroup,\n    point: item.satisfactionSum / item.satisfactionCount,\n    satisfactionCount: item.satisfactionCount,\n    link: item.link,\n    code: item.code,\n    name: item.name,\n    platformId: item.platformId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  })))), !isLoadingCourses && next < courses.length && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    justify: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleShowMorePosts,\n    color: \"secondary\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, \"\\u0E14\\u0E39\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E40\\u0E15\\u0E34\\u0E21\")))));\n}","map":{"version":3,"sources":["/Users/ninew/Documents/GitHub/Learing-portal/src/modules/coursePortal/components/Course/GroupAllCourse.tsx"],"names":["React","useEffect","Suspense","lazy","useState","Grid","Divider","Container","CircularProgress","Button","makeStyles","useDispatch","useSelector","actions","CourseDetail","Header","SelectCategory","useStyles","theme","content","paddingRight","paddingLeft","divider","marginBottom","circular","marginTop","button","background","palette","primary","main","borderRadius","padding","margin","GroupCourse","dispatch","courses","isLoadingCourses","state","course","classes","postsPerPage","postsToShow","setPostsToShow","next","setNext","loopWithSlice","start","end","slicedPosts","slice","handleShowMorePosts","action","loadCourses","renderLoader","map","item","index","id","learningTopic","learningObjective","courseCategoryId","thumbnail","viewCount","assessment","targetGroup","satisfactionSum","satisfactionCount","link","code","name","platformId","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,IAArC,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,SAAxB,EAAmCC,gBAAnC,EAAqDC,MAArD,QAAmE,mBAAnE;AAGA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AAEA,MAAMC,YAAY,GAAGX,IAAI,CAAC,MAAM,OAAO,iBAAP,CAAP,CAAzB;AACA,MAAMY,MAAM,GAAGZ,IAAI,CAAC,MAAM,OAAO,oBAAP,CAAP,CAAnB;AACA,MAAMa,cAAc,GAAGb,IAAI,CAAC,MAAM,OAAO,4BAAP,CAAP,CAA3B;AAIA,MAAMc,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACrCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,YAAY,EAAE,KADT;AAELC,IAAAA,WAAW,EAAE;AAFR,GAD4B;AAKrCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,YAAY,EAAE;AADT,GAL4B;AAOlCC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF,GAPwB;AASlCC,EAAAA,MAAM,EAAE;AACPC,IAAAA,UAAU,EAAET,KAAK,CAACU,OAAN,CAAcC,OAAd,CAAsBC,IAD3B;AAEPC,IAAAA,YAAY,EAAE,EAFP;AAGPC,IAAAA,OAAO,EAAE,qBAHF;AAIPC,IAAAA,MAAM,EAAE;AAJD;AAT0B,CAAZ,CAAD,CAA5B;AAoBA,eAAe,SAASC,WAAT,GAAuB;AAClC,QAAMC,QAAQ,GAAGxB,WAAW,EAA5B;AACA,QAAM;AAAEyB,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAgCzB,WAAW,CAAE0B,KAAD,IAAgBA,KAAK,CAACC,MAAvB,CAAjD;AACA,QAAMC,OAAO,GAAGvB,SAAS,EAAzB;AACA,QAAMwB,YAAY,GAAG,CAArB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCvC,QAAQ,CAAc,EAAd,CAA9C;AACA,QAAM,CAACwC,IAAD,EAAOC,OAAP,IAAkBzC,QAAQ,CAAC,CAAD,CAAhC;;AACA,QAAM0C,aAAa,GAAG,CAACC,KAAD,EAAaC,GAAb,KAA0B;AAC5C,UAAMC,WAAW,GAAGb,OAAO,CAACc,KAAR,CAAcH,KAAd,EAAqBC,GAArB,CAApB;AACAL,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiB,GAAGO,WAApB,CAAD,CAAd;AACH,GAHD;;AAKAhD,EAAAA,SAAS,CAAC,MAAM;AACZ6C,IAAAA,aAAa,CAAC,CAAD,EAAIL,YAAJ,CAAb,CADY,CAEZ;AACH,GAHQ,EAGN,CAACJ,gBAAD,CAHM,CAAT;;AAKA,QAAMc,mBAAmB,GAAG,MAAM;AAC9BL,IAAAA,aAAa,CAACF,IAAD,EAAOA,IAAI,GAAGH,YAAd,CAAb;AACAI,IAAAA,OAAO,CAACD,IAAI,GAAGH,YAAR,CAAP;AACH,GAHD;;AAIAxC,EAAAA,SAAS,CAAC,MAAM;AACZ0C,IAAAA,cAAc,CAAC,EAAD,CAAd;AACA,UAAMS,MAAM,GAAGvC,OAAO,CAACwC,WAAR,CAAoB,KAApB,CAAf;AACAlB,IAAAA,QAAQ,CAACiB,MAAD,CAAR,CAHY,CAIZ;AACH,GALQ,EAKN,EALM,CAAT;;AAQA,QAAME,YAAY,GAAG,mBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;;AAGA,sBACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,YAAY,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEd,OAAO,CAACrB,OAAnC;AAA4C,IAAA,SAAS,EAAC,KAAtD;AAA4D,IAAA,UAAU,EAAC,QAAvE;AAAgF,IAAA,OAAO,EAAE,eAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8GAFJ,eAGI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFJ,eAQI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEqB,OAAO,CAAClB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAUI,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAC,KAFd;AAGI,IAAA,UAAU,EAAC,QAHf;AAII,IAAA,OAAO,EAAEe,gBAAgB,GAAG,QAAH,GAAc,YAJ3C;AAKI,IAAA,OAAO,EAAE,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKA,gBAAgB,iBAAI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,WAAxB;AAAoC,IAAA,SAAS,EAAEG,OAAO,CAAChB,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPzB,EASKkB,WAAW,CAACa,GAAZ,CAAgB,CAACC,IAAD,EAAkBC,KAAlB,kBAEb,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAwC,IAAA,EAAE,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,YAAD;AACI,IAAA,GAAG,EAAEA,KADT;AAEI,IAAA,EAAE,EAAED,IAAI,CAACE,EAFb;AAGI,IAAA,aAAa,EAAEF,IAAI,CAACG,aAHxB;AAII,IAAA,iBAAiB,EAAEH,IAAI,CAACI,iBAJ5B;AAKI,IAAA,gBAAgB,EAAEJ,IAAI,CAACK,gBAL3B;AAMI,IAAA,SAAS,EAAEL,IAAI,CAACM,SANpB;AAOI,IAAA,SAAS,EAAEN,IAAI,CAACO,SAPpB;AAQI,IAAA,UAAU,EAAEP,IAAI,CAACQ,UARrB;AASI,IAAA,WAAW,EAAER,IAAI,CAACS,WATtB;AAUI,IAAA,KAAK,EAAGT,IAAI,CAACU,eAAN,GAAyBV,IAAI,CAACW,iBAVzC;AAWI,IAAA,iBAAiB,EAAEX,IAAI,CAACW,iBAX5B;AAYI,IAAA,IAAI,EAAEX,IAAI,CAACY,IAZf;AAaI,IAAA,IAAI,EAAEZ,IAAI,CAACa,IAbf;AAcI,IAAA,IAAI,EAAEb,IAAI,CAACc,IAdf;AAeI,IAAA,UAAU,EAAEd,IAAI,CAACe,UAfrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFH,CATL,CADJ,EAuCK,CAAClC,gBAAD,IAAqBO,IAAI,GAAGR,OAAO,CAACoC,MAApC,iBACG,oBAAC,IAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,SAAS,EAAC,KAFd;AAGI,IAAA,UAAU,EAAC,QAHf;AAII,IAAA,OAAO,EAAE,QAJb;AAKI,IAAA,OAAO,EAAE,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAErB,mBAAjB;AAAsC,IAAA,KAAK,EAAC,WAA5C;AAAwD,IAAA,SAAS,EAAEX,OAAO,CAACd,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EARJ,CAxCR,CAVJ,CAJJ,CADJ;AAsEH","sourcesContent":["import React, { useEffect, Suspense, lazy, useState } from \"react\";\nimport { Grid, Divider, Container, CircularProgress, Button } from \"@material-ui/core\";\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as actions from \"../../actions\"\nimport { CardProps } from \"./tyscript\"\nconst CourseDetail = lazy(() => import('./CourseDetails'));\nconst Header = lazy(() => import('../../share/Header'));\nconst SelectCategory = lazy(() => import('../../share/SelectCategory'));\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        paddingRight: \"8vw\",\n        paddingLeft: \"8vw\",\n    },\n    divider: {\n        marginBottom: 20\n    }, circular: {\n        marginTop: 20\n    }, button: {\n        background: theme.palette.primary.main,\n        borderRadius: 40,\n        padding: '15px 30px 15px 30px',\n        margin: 10\n    }\n\n}));\n\n\n\nexport default function GroupCourse() {\n    const dispatch = useDispatch();\n    const { courses, isLoadingCourses } = useSelector((state: any) => state.course);\n    const classes = useStyles()\n    const postsPerPage = 8;\n    const [postsToShow, setPostsToShow] = useState<CardProps[]>([]);\n    const [next, setNext] = useState(8);\n    const loopWithSlice = (start: any, end: any) => {\n        const slicedPosts = courses.slice(start, end);\n        setPostsToShow([...postsToShow, ...slicedPosts]);\n    };\n\n    useEffect(() => {\n        loopWithSlice(0, postsPerPage);\n        // eslint-disable-next-line\n    }, [isLoadingCourses]);\n\n    const handleShowMorePosts = () => {\n        loopWithSlice(next, next + postsPerPage);\n        setNext(next + postsPerPage);\n    };\n    useEffect(() => {\n        setPostsToShow([])\n        const action = actions.loadCourses(\"all\")\n        dispatch(action)\n        // eslint-disable-next-line\n    }, [])\n\n\n    const renderLoader = () =>\n        <div></div>\n\n    return (\n        <Suspense fallback={renderLoader()}>\n            <Header text={\"รายวิชา\"} />\n\n\n            <div>\n\n                <Grid container className={classes.content} direction=\"row\" alignItems=\"center\" justify={\"space-between\"} >\n\n                    <h2>คอร์สเรียนทั้งหมด</h2>\n                    <SelectCategory />\n\n                </Grid>\n                <Divider className={classes.divider} />\n\n                <Container maxWidth=\"lg\">\n                    <Grid\n                        container\n                        direction=\"row\"\n                        alignItems=\"center\"\n                        justify={isLoadingCourses ? \"center\" : \"flex-start\"}\n                        spacing={3}\n                    >\n                        {isLoadingCourses && <CircularProgress color=\"secondary\" className={classes.circular} />}\n\n                        {postsToShow.map((item: CardProps, index: number) => (\n\n                            <Grid item xs={12} sm={6} md={4} lg={3} xl={3}>\n\n                                <CourseDetail\n                                    key={index}\n                                    id={item.id}\n                                    learningTopic={item.learningTopic}\n                                    learningObjective={item.learningObjective}\n                                    courseCategoryId={item.courseCategoryId}\n                                    thumbnail={item.thumbnail}\n                                    viewCount={item.viewCount}\n                                    assessment={item.assessment}\n                                    targetGroup={item.targetGroup}\n                                    point={(item.satisfactionSum) / item.satisfactionCount}\n                                    satisfactionCount={item.satisfactionCount}\n                                    link={item.link}\n                                    code={item.code}\n                                    name={item.name}\n                                    platformId={item.platformId}\n                                />\n\n                            </Grid>\n\n                        ))\n                        }\n\n                    </Grid>\n\n                    {!isLoadingCourses && next < courses.length &&\n                        <Grid\n                            container\n                            direction=\"row\"\n                            alignItems=\"center\"\n                            justify={\"center\"}\n                            spacing={3}\n                        >\n\n                            <Button onClick={handleShowMorePosts} color=\"secondary\" className={classes.button}>ดูเพิ่มเติม</Button>\n                        </Grid>}\n                </Container>\n            </div>\n\n        </Suspense>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}