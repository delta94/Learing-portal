{"ast":null,"code":"import React,{useEffect,Suspense,lazy}from\"react\";import{Grid,Divider,Container}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import{useDispatch,useSelector}from'react-redux';import*as actions from\"../../actions\";var CourseDetail=lazy(function(){return import('./CourseDetails');});var Header=lazy(function(){return import('../../share/Header');});var SelectCategory=lazy(function(){return import('../../share/SelectCategory');});var useStyles=makeStyles(function(theme){return{content:{paddingRight:\"8vw\",paddingLeft:\"8vw\"},divider:{marginBottom:20}};});export default function GroupCourse(props){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.course;}),courses=_useSelector.courses,isLoadingCourses=_useSelector.isLoadingCourses;var classes=useStyles();useEffect(function(){var action=actions.loadCourses(\"all\");dispatch(action);// eslint-disable-next-line\n},[]);var renderLoader=function renderLoader(){return/*#__PURE__*/React.createElement(\"div\",null);};return/*#__PURE__*/React.createElement(Suspense,{fallback:renderLoader()},/*#__PURE__*/React.createElement(Header,{text:\"รายวิชา\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true,className:classes.content,direction:\"row\",alignItems:\"center\",justify:\"space-between\"},/*#__PURE__*/React.createElement(\"h2\",null,\"\\u0E04\\u0E2D\\u0E23\\u0E4C\\u0E2A\\u0E40\\u0E23\\u0E35\\u0E22\\u0E19\\u0E17\\u0E31\\u0E49\\u0E07\\u0E2B\\u0E21\\u0E14\"),/*#__PURE__*/React.createElement(SelectCategory,null)),/*#__PURE__*/React.createElement(Divider,{className:classes.divider}),/*#__PURE__*/React.createElement(Container,{maxWidth:\"lg\"},/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",alignItems:\"center\",justify:isLoadingCourses?\"center\":\"flex-start\",spacing:3},courses.map(function(item,index){return/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,sm:6,md:4,lg:3,xl:3},/*#__PURE__*/React.createElement(CourseDetail,{key:index,id:item.id,learningTopic:item.learningTopic,learningObjective:item.learningObjective,courseCategoryId:item.courseCategoryId,thumbnail:item.thumbnail,viewCount:item.viewCount,assessment:item.assessment,targetGroup:item.targetGroup,point:item.satisfactionSum/item.satisfactionCount,satisfactionCount:item.satisfactionCount,link:item.link,code:item.code,name:item.name,platformId:item.platformId}));})))));}","map":{"version":3,"sources":["/Users/ninew/Documents/GitHub/Learing-portal/src/modules/coursePortal/components/Course/GroupAllCourse.tsx"],"names":["React","useEffect","Suspense","lazy","Grid","Divider","Container","makeStyles","useDispatch","useSelector","actions","CourseDetail","Header","SelectCategory","useStyles","theme","content","paddingRight","paddingLeft","divider","marginBottom","GroupCourse","props","dispatch","state","course","courses","isLoadingCourses","classes","action","loadCourses","renderLoader","map","item","index","id","learningTopic","learningObjective","courseCategoryId","thumbnail","viewCount","assessment","targetGroup","satisfactionSum","satisfactionCount","link","code","name","platformId"],"mappings":"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","sourcesContent":["import React, { useEffect, Suspense, lazy } from \"react\";\nimport { Grid, Divider, Container, } from \"@material-ui/core\";\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as actions from \"../../actions\"\n\nconst CourseDetail = lazy(() => import('./CourseDetails'));\nconst Header = lazy(() => import('../../share/Header'));\nconst SelectCategory = lazy(() => import('../../share/SelectCategory'));\n\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        paddingRight: \"8vw\",\n        paddingLeft: \"8vw\",\n    },\n    divider: {\n        marginBottom: 20\n    },\n\n}));\nexport default function GroupCourse(props: any) {\n    const dispatch = useDispatch();\n    const { courses, isLoadingCourses } = useSelector((state: any) => state.course);\n    const classes = useStyles()\n\n    useEffect(() => {\n        const action = actions.loadCourses(\"all\")\n        dispatch(action)\n        // eslint-disable-next-line\n    }, [])\n\n\n    const renderLoader = () =>\n        <div></div>\n\n    return (\n        <Suspense fallback={renderLoader()}>\n            <Header text={\"รายวิชา\"} />\n\n\n            <div>\n\n                <Grid container className={classes.content} direction=\"row\" alignItems=\"center\" justify={\"space-between\"} >\n\n                    <h2>คอร์สเรียนทั้งหมด</h2>\n                    <SelectCategory />\n\n                </Grid>\n                <Divider className={classes.divider} />\n\n                <Container maxWidth=\"lg\">\n                    <Grid\n                        container\n                        direction=\"row\"\n                        alignItems=\"center\"\n                        justify={isLoadingCourses ? \"center\" : \"flex-start\"}\n                        spacing={3}\n                    >\n\n                        {courses.map((item: any, index: number) => (\n                            <Grid item xs={12} sm={6} md={4} lg={3} xl={3}>\n                                <CourseDetail\n                                    key={index}\n                                    id={item.id}\n                                    learningTopic={item.learningTopic}\n                                    learningObjective={item.learningObjective}\n                                    courseCategoryId={item.courseCategoryId}\n                                    thumbnail={item.thumbnail}\n                                    viewCount={item.viewCount}\n                                    assessment={item.assessment}\n                                    targetGroup={item.targetGroup}\n                                    point={(item.satisfactionSum) / item.satisfactionCount}\n                                    satisfactionCount={item.satisfactionCount}\n                                    link={item.link}\n                                    code={item.code}\n                                    name={item.name}\n                                    platformId={item.platformId}\n                                />\n                            </Grid>\n                        ))\n                        }\n                    </Grid>\n                </Container>\n            </div>\n\n        </Suspense>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}