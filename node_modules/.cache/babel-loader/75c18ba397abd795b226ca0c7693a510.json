{"ast":null,"code":"import axios from \"axios\";\nimport { push } from 'connected-react-router';\nimport { setCookie } from 'cookie/cookie';\nconst LOAD_LOGIN_REQUEST = \"learning-portal/src/login/LOAD_LOGIN_REQUEST\";\nconst LOAD_LOGIN_SUCCESS = \"learning-portal/src/login/LOAD_LOGIN_SUCCESS\";\nconst LOAD_LOGIN_FAILURE = \"learning-portal/src/login/LOAD_LOGIN_FAILURE\";\nconst CLEAR_MESSAGE_LOGIN = \"learning-portal/src/login/CLEAR_MESSAGE_LOGIN\";\n\nfunction clearMessageLogin() {\n  return {\n    type: CLEAR_MESSAGE_LOGIN\n  };\n}\n\nfunction loadLogin(userInfo) {\n  return async dispatch => {\n    dispatch({\n      type: LOAD_LOGIN_REQUEST\n    });\n\n    try {\n      const result = await axios.post(`/Tokens`, userInfo);\n      dispatch({\n        type: LOAD_LOGIN_SUCCESS,\n        payload: {\n          user: result.data,\n          status: result.status,\n          messageLogin: null\n        }\n      });\n      setCookie('id', userInfo.userId, 3);\n      setCookie('role', userInfo.role, 3);\n      setCookie('token', result.data.token, 3);\n      dispatch(push('/learning-portal'));\n    } catch (err) {\n      if (err.response.status === 401) {\n        dispatch({\n          type: LOAD_LOGIN_FAILURE,\n          payload: {\n            status: err.response.status,\n            messageLogin: `รหัสผ่านไม่ถูกต้อง`\n          }\n        });\n      }\n\n      if (err.response.status === 404) {\n        dispatch({\n          type: LOAD_LOGIN_FAILURE,\n          payload: {\n            status: err.response.status,\n            messageLogin: `รหัสผู้ใช้ผิด`\n          }\n        });\n      }\n    }\n  };\n}\n\nexport { LOAD_LOGIN_REQUEST, LOAD_LOGIN_SUCCESS, LOAD_LOGIN_FAILURE, CLEAR_MESSAGE_LOGIN, loadLogin, clearMessageLogin };","map":{"version":3,"sources":["/Users/ninew/Documents/GitHub/Learing-portal/src/modules/loginPortal/actions.tsx"],"names":["axios","push","setCookie","LOAD_LOGIN_REQUEST","LOAD_LOGIN_SUCCESS","LOAD_LOGIN_FAILURE","CLEAR_MESSAGE_LOGIN","clearMessageLogin","type","loadLogin","userInfo","dispatch","result","post","payload","user","data","status","messageLogin","userId","role","token","err","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,MAAMC,kBAAkB,GAAG,8CAA3B;AACA,MAAMC,kBAAkB,GAAG,8CAA3B;AACA,MAAMC,kBAAkB,GAAG,8CAA3B;AACA,MAAMC,mBAAmB,GAAG,+CAA5B;;AAIA,SAASC,iBAAT,GAA6B;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAEF;AADD,GAAP;AAGD;;AACD,SAASG,SAAT,CAAmBC,QAAnB,EAAkC;AAChC,SAAO,MAAOC,QAAP,IAAyB;AAC9BA,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMS,MAAM,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAY,SAAZ,EAAsBH,QAAtB,CAArB;AACAC,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAEJ,kBADC;AAEPU,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAEH,MAAM,CAACI,IADN;AAEPC,UAAAA,MAAM,EAAEL,MAAM,CAACK,MAFR;AAGPC,UAAAA,YAAY,EAAE;AAHP;AAFF,OAAD,CAAR;AAQAhB,MAAAA,SAAS,CAAC,IAAD,EAAOQ,QAAQ,CAACS,MAAhB,EAAwB,CAAxB,CAAT;AACAjB,MAAAA,SAAS,CAAC,MAAD,EAASQ,QAAQ,CAACU,IAAlB,EAAwB,CAAxB,CAAT;AACAlB,MAAAA,SAAS,CAAC,OAAD,EAAUU,MAAM,CAACI,IAAP,CAAYK,KAAtB,EAA6B,CAA7B,CAAT;AACAV,MAAAA,QAAQ,CAACV,IAAI,CAAC,kBAAD,CAAL,CAAR;AACD,KAdD,CAcE,OAAOqB,GAAP,EAAY;AACZ,UAAIA,GAAG,CAACC,QAAJ,CAAaN,MAAb,KAAwB,GAA5B,EAAiC;AAC/BN,QAAAA,QAAQ,CAAC;AACPH,UAAAA,IAAI,EAAEH,kBADC;AAEPS,UAAAA,OAAO,EAAE;AACPG,YAAAA,MAAM,EAAEK,GAAG,CAACC,QAAJ,CAAaN,MADd;AAEPC,YAAAA,YAAY,EAAG;AAFR;AAFF,SAAD,CAAR;AAQD;;AACD,UAAII,GAAG,CAACC,QAAJ,CAAaN,MAAb,KAAwB,GAA5B,EAAiC;AAC/BN,QAAAA,QAAQ,CAAC;AACPH,UAAAA,IAAI,EAAEH,kBADC;AAEPS,UAAAA,OAAO,EAAE;AACPG,YAAAA,MAAM,EAAEK,GAAG,CAACC,QAAJ,CAAaN,MADd;AAEPC,YAAAA,YAAY,EAAG;AAFR;AAFF,SAAD,CAAR;AAQD;AAEF;AACF,GAvCD;AAwCD;;AAID,SACEf,kBADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,mBAJF,EAKEG,SALF,EAMEF,iBANF","sourcesContent":["import axios from \"axios\";\nimport { push } from 'connected-react-router'\nimport { setCookie } from 'cookie/cookie'\nconst LOAD_LOGIN_REQUEST = \"learning-portal/src/login/LOAD_LOGIN_REQUEST\";\nconst LOAD_LOGIN_SUCCESS = \"learning-portal/src/login/LOAD_LOGIN_SUCCESS\";\nconst LOAD_LOGIN_FAILURE = \"learning-portal/src/login/LOAD_LOGIN_FAILURE\";\nconst CLEAR_MESSAGE_LOGIN = \"learning-portal/src/login/CLEAR_MESSAGE_LOGIN\";\n\n\n\nfunction clearMessageLogin() {\n  return {\n    type: CLEAR_MESSAGE_LOGIN,\n  }\n}\nfunction loadLogin(userInfo: any) {\n  return async (dispatch: any) => {\n    dispatch({ type: LOAD_LOGIN_REQUEST });\n    try {\n      const result = await axios.post(`/Tokens`, userInfo);\n      dispatch({\n        type: LOAD_LOGIN_SUCCESS,\n        payload: {\n          user: result.data,\n          status: result.status,\n          messageLogin: null\n        },\n      });\n      setCookie('id', userInfo.userId, 3)\n      setCookie('role', userInfo.role, 3)\n      setCookie('token', result.data.token, 3)\n      dispatch(push('/learning-portal'))\n    } catch (err) {\n      if (err.response.status === 401) {\n        dispatch({\n          type: LOAD_LOGIN_FAILURE,\n          payload: {\n            status: err.response.status,\n            messageLogin: `รหัสผ่านไม่ถูกต้อง`\n          },\n        });\n\n      }\n      if (err.response.status === 404) {\n        dispatch({\n          type: LOAD_LOGIN_FAILURE,\n          payload: {\n            status: err.response.status,\n            messageLogin: `รหัสผู้ใช้ผิด`\n          },\n        });\n\n      }\n\n    }\n  };\n}\n\n\n\nexport {\n  LOAD_LOGIN_REQUEST,\n  LOAD_LOGIN_SUCCESS,\n  LOAD_LOGIN_FAILURE,\n  CLEAR_MESSAGE_LOGIN,\n  loadLogin,\n  clearMessageLogin\n\n};\n"]},"metadata":{},"sourceType":"module"}