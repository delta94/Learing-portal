{"ast":null,"code":"var _jsxFileName = \"/Users/ninew/Documents/GitHub/Learing-portal/src/shared/SnackBar/SnackBar.tsx\";\nimport React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from 'react-redux';\nimport * as infoactions from 'modules/infomation/actions';\nimport * as actionClears from \"modules/adminPortal/actions\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function CustomizedSnackbars(props) {\n  const {\n    open,\n    severity,\n    message\n  } = props;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    const action = infoactions.clearMessage();\n    dispatch(action);\n    const actionClear = actionClears.clearMessage();\n    dispatch(actionClear);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    open: open,\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    autoHideDuration: 6000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: severity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, message)));\n}","map":{"version":3,"sources":["/Users/ninew/Documents/GitHub/Learing-portal/src/shared/SnackBar/SnackBar.tsx"],"names":["React","Snackbar","MuiAlert","makeStyles","useDispatch","infoactions","actionClears","Alert","props","useStyles","theme","root","width","marginTop","spacing","CustomizedSnackbars","open","severity","message","classes","dispatch","handleClose","event","reason","action","clearMessage","actionClear","vertical","horizontal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqC,wBAArC;AACA,SAASC,UAAT,QAAkC,0BAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,WAAZ,MAA6B,4BAA7B;AACA,OAAO,KAAKC,YAAZ,MAA8B,6BAA9B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAkC;AAC9B,sBAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH;;AAED,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAmB;AAC5CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEF,iBAAa;AACTC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADF;AAFX;AADsC,CAAnB,CAAD,CAA5B;AASA,eAAe,SAASC,mBAAT,CAA6BP,KAA7B,EAAmD;AAC9D,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAA8BV,KAApC;AACA,QAAMW,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAMW,QAAQ,GAAGhB,WAAW,EAA5B;;AACA,QAAMiB,WAAW,GAAG,CAACC,KAAD,EAA+BC,MAA/B,KAAmD;AACnE,QAAIA,MAAM,KAAK,WAAf,EAA4B;AACxB;AACH;;AACD,UAAMC,MAAM,GAAGnB,WAAW,CAACoB,YAAZ,EAAf;AACAL,IAAAA,QAAQ,CAACI,MAAD,CAAR;AACA,UAAME,WAAW,GAAGpB,YAAY,CAACmB,YAAb,EAApB;AACAL,IAAAA,QAAQ,CAACM,WAAD,CAAR;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACR,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEK,IADV;AAEI,IAAA,YAAY,EAAE;AAAEW,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAFlB;AAGI,IAAA,gBAAgB,EAAE,IAHtB;AAII,IAAA,OAAO,EAAEP,WAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,WAAhB;AAA6B,IAAA,QAAQ,EAAEJ,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,OADL,CANJ,CADJ,CADJ;AAcH","sourcesContent":["import React from \"react\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useDispatch } from 'react-redux'\nimport * as infoactions from 'modules/infomation/actions'\nimport * as actionClears from \"modules/adminPortal/actions\"\nimport { SnackBarProps } from \"./typescript\"\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        width: \"100%\",\n        \"& > * + *\": {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function CustomizedSnackbars(props: SnackBarProps) {\n    const { open, severity, message } = props;\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n        const action = infoactions.clearMessage()\n        dispatch(action)\n        const actionClear = actionClears.clearMessage()\n        dispatch(actionClear)\n    };\n\n    return (\n        <div className={classes.root}>\n            <Snackbar\n                open={open}\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n                autoHideDuration={6000}\n                onClose={handleClose}\n            >\n                <Alert onClose={handleClose} severity={severity}>\n                    {message}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}