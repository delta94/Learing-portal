{"ast":null,"code":"var _jsxFileName = \"/Users/ninew/Documents/GitHub/Learing-portal/src/modules/portal/components/LinkPortal.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport axios from \"axios\";\nimport Dialog from \"./Dialog\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 8,\n    width: \"100%\"\n  },\n  rounded: {\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  }\n}));\nexport default function VariantAvatars() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetch = async () => {\n      const {\n        data\n      } = await axios.get('/Platforms');\n      setData(data);\n    };\n\n    fetch();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    variant: \"scrollable\",\n    scrollButtons: \"on\",\n    TabIndicatorProps: {\n      style: {\n        background: \"none\"\n      }\n    },\n    indicatorColor: undefined,\n    textColor: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, data.map((item, index) => /*#__PURE__*/React.createElement(Tab, {\n    key: index,\n    icon: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: `url('${item.thumbnail}`,\n        backgroundSize: \"cover\",\n        padding: \"30px\"\n      },\n      onClick: handleClickOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    setOpen: setOpen,\n    data: data !== undefined ? data[value] : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ninew/Documents/GitHub/Learing-portal/src/modules/portal/components/LinkPortal.tsx"],"names":["React","useEffect","useState","makeStyles","Tabs","Tab","axios","Dialog","useStyles","theme","root","flexGrow","marginTop","width","rounded","spacing","height","VariantAvatars","classes","value","setValue","open","setOpen","data","setData","fetch","get","handleClickOpen","handleChange","event","newValue","style","background","undefined","map","item","index","thumbnail","backgroundSize","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport axios from \"axios\"\nimport Dialog from \"./Dialog\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 8,\n    width: \"100%\",\n  },\n  rounded: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n\nexport default function VariantAvatars() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = useState<any>([])\n\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { data } = await axios.get('/Platforms')\n      setData(data)\n    }\n    fetch()\n  }, [])\n  const handleClickOpen = () => {\n\n    setOpen(true);\n\n  };\n  const handleChange = (event: any, newValue: any) => {\n    setValue(newValue);\n\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          variant=\"scrollable\"\n          scrollButtons=\"on\"\n          TabIndicatorProps={{\n            style: {\n              background: \"none\",\n            },\n          }}\n          indicatorColor={undefined}\n          textColor=\"primary\"\n        >\n          {data.map((item: any, index: number) =>\n            <Tab\n              key={index}\n              icon={\n                < div style={{\n                  background: `url('${item.thumbnail}`,\n                  backgroundSize: \"cover\",\n                  padding: \"30px\"\n\n                }} onClick={handleClickOpen} />\n\n              }\n            />\n\n\n          )}\n\n\n        </Tabs>\n      </div>\n      <Dialog open={open} setOpen={setOpen} data={data !== undefined ? data[value] : null} />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}