{"ast":null,"code":"import React from\"react\";import Snackbar from\"@material-ui/core/Snackbar\";import MuiAlert from\"@material-ui/lab/Alert\";import{makeStyles}from\"@material-ui/core/styles\";import{useDispatch}from'react-redux';import*as infoactions from'modules/infomation/actions';import*as actionClears from\"modules/adminPortal/actions\";function Alert(props){return/*#__PURE__*/React.createElement(MuiAlert,Object.assign({elevation:6,variant:\"filled\"},props));}var useStyles=makeStyles(function(theme){return{root:{width:\"100%\",\"& > * + *\":{marginTop:theme.spacing(2)}}};});export default function CustomizedSnackbars(props){var open=props.open,severity=props.severity,message=props.message;var classes=useStyles();var dispatch=useDispatch();var handleClose=function handleClose(event,reason){if(reason===\"clickaway\"){return;}var action=infoactions.clearMessage();dispatch(action);var actionClear=actionClears.clearMessage();dispatch(actionClear);};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Snackbar,{open:open,anchorOrigin:{vertical:\"top\",horizontal:\"center\"},autoHideDuration:6000,onClose:handleClose},/*#__PURE__*/React.createElement(Alert,{onClose:handleClose,severity:severity},message)));}","map":{"version":3,"sources":["/Users/ninew/Documents/GitHub/Learing-portal/src/shared/SnackBar/SnackBar.tsx"],"names":["React","Snackbar","MuiAlert","makeStyles","useDispatch","infoactions","actionClears","Alert","props","useStyles","theme","root","width","marginTop","spacing","CustomizedSnackbars","open","severity","message","classes","dispatch","handleClose","event","reason","action","clearMessage","actionClear","vertical","horizontal"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,QAAP,KAAqC,wBAArC,CACA,OAASC,UAAT,KAAkC,0BAAlC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,4BAA7B,CACA,MAAO,GAAKC,CAAAA,YAAZ,KAA8B,6BAA9B,CAEA,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAkC,CAC9B,mBAAO,oBAAC,QAAD,gBAAU,SAAS,CAAE,CAArB,CAAwB,OAAO,CAAC,QAAhC,EAA6CA,KAA7C,EAAP,CACH,CAED,GAAMC,CAAAA,SAAS,CAAGN,UAAU,CAAC,SAACO,KAAD,QAAmB,CAC5CC,IAAI,CAAE,CACFC,KAAK,CAAE,MADL,CAEF,YAAa,CACTC,SAAS,CAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADF,CAFX,CADsC,CAAnB,EAAD,CAA5B,CASA,cAAe,SAASC,CAAAA,mBAAT,CAA6BP,KAA7B,CAAmD,IACtDQ,CAAAA,IADsD,CAC1BR,KAD0B,CACtDQ,IADsD,CAChDC,QADgD,CAC1BT,KAD0B,CAChDS,QADgD,CACtCC,OADsC,CAC1BV,KAD0B,CACtCU,OADsC,CAE9D,GAAMC,CAAAA,OAAO,CAAGV,SAAS,EAAzB,CACA,GAAMW,CAAAA,QAAQ,CAAGhB,WAAW,EAA5B,CACA,GAAMiB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAA+BC,MAA/B,CAAmD,CACnE,GAAIA,MAAM,GAAK,WAAf,CAA4B,CACxB,OACH,CACD,GAAMC,CAAAA,MAAM,CAAGnB,WAAW,CAACoB,YAAZ,EAAf,CACAL,QAAQ,CAACI,MAAD,CAAR,CACA,GAAME,CAAAA,WAAW,CAAGpB,YAAY,CAACmB,YAAb,EAApB,CACAL,QAAQ,CAACM,WAAD,CAAR,CACH,CARD,CAUA,mBACI,2BAAK,SAAS,CAAEP,OAAO,CAACR,IAAxB,eACI,oBAAC,QAAD,EACI,IAAI,CAAEK,IADV,CAEI,YAAY,CAAE,CAAEW,QAAQ,CAAE,KAAZ,CAAmBC,UAAU,CAAE,QAA/B,CAFlB,CAGI,gBAAgB,CAAE,IAHtB,CAII,OAAO,CAAEP,WAJb,eAMI,oBAAC,KAAD,EAAO,OAAO,CAAEA,WAAhB,CAA6B,QAAQ,CAAEJ,QAAvC,EACKC,OADL,CANJ,CADJ,CADJ,CAcH","sourcesContent":["import React from \"react\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { useDispatch } from 'react-redux'\nimport * as infoactions from 'modules/infomation/actions'\nimport * as actionClears from \"modules/adminPortal/actions\"\nimport { SnackBarProps } from \"./typescript\"\nfunction Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        width: \"100%\",\n        \"& > * + *\": {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport default function CustomizedSnackbars(props: SnackBarProps) {\n    const { open, severity, message } = props;\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n        const action = infoactions.clearMessage()\n        dispatch(action)\n        const actionClear = actionClears.clearMessage()\n        dispatch(actionClear)\n    };\n\n    return (\n        <div className={classes.root}>\n            <Snackbar\n                open={open}\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n                autoHideDuration={6000}\n                onClose={handleClose}\n            >\n                <Alert onClose={handleClose} severity={severity}>\n                    {message}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}