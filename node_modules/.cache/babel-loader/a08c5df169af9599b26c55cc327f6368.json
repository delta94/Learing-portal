{"ast":null,"code":"import React from\"react\";import amber from\"@material-ui/core/colors/amber\";import{Avatar,Grid,Typography,Divider}from\"@material-ui/core\";import{createStyles,makeStyles}from\"@material-ui/core/styles\";var useStyles=makeStyles(function(theme){return createStyles({root:{marginTop:10},answer:{textDecoration:\"underline\"},amber:{color:theme.palette.getContrastText(amber[500]),backgroundColor:amber[500]},divider:{marginTop:theme.spacing(2)},container:{padding:theme.spacing(1.5)}});});export default function ItemComponent(_ref){var key=_ref.key,question=_ref.question,answer=_ref.answer;var classes=useStyles();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",alignItems:\"center\",spacing:2,className:classes.root,key:key},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Avatar,{className:classes.amber},\"Q\")),/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Typography,{component:\"h1\",variant:\"h6\",align:\"center\",style:{fontSize:\"1rem\",fontWeight:600}},question,\"?\"))),/*#__PURE__*/React.createElement(Divider,{className:classes.divider}),/*#__PURE__*/React.createElement(Grid,{className:classes.container,container:true,spacing:0},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,className:classes.answer},\"\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\"),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:\" \".concat(answer)}}))));}","map":{"version":3,"sources":["/Users/ninew/Documents/GitHub/Learing-portal/src/modules/F&A/QuestionBox.tsx"],"names":["React","amber","Avatar","Grid","Typography","Divider","createStyles","makeStyles","useStyles","theme","root","marginTop","answer","textDecoration","color","palette","getContrastText","backgroundColor","divider","spacing","container","padding","ItemComponent","key","question","classes","fontSize","fontWeight","__html"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gCAAlB,CACA,OAAQC,MAAR,CAAeC,IAAf,CAAoBC,UAApB,CAA+BC,OAA/B,KAA6C,mBAA7C,CACA,OAASC,YAAT,CAAuBC,UAAvB,KAAgD,0BAAhD,CAKA,GAAMC,CAAAA,SAAS,CAAGD,UAAU,CAAC,SAACE,KAAD,QACzBH,CAAAA,YAAY,CAAC,CACTI,IAAI,CAAE,CACFC,SAAS,CAAE,EADT,CADG,CAITC,MAAM,CAAE,CACNC,cAAc,CAAC,WADT,CAJC,CAOTZ,KAAK,CAAE,CACHa,KAAK,CAAEL,KAAK,CAACM,OAAN,CAAcC,eAAd,CAA8Bf,KAAK,CAAC,GAAD,CAAnC,CADJ,CAEHgB,eAAe,CAAEhB,KAAK,CAAC,GAAD,CAFnB,CAPE,CAWTiB,OAAO,CAAE,CACLP,SAAS,CAAEF,KAAK,CAACU,OAAN,CAAc,CAAd,CADN,CAXA,CAcTC,SAAS,CAAE,CACPC,OAAO,CAAEZ,KAAK,CAACU,OAAN,CAAc,GAAd,CADF,CAdF,CAAD,CADa,EAAD,CAA5B,CAqBA,cAAe,SAASG,CAAAA,aAAT,MAQZ,IAPDC,CAAAA,GAOC,MAPDA,GAOC,CANCC,QAMD,MANCA,QAMD,CALCZ,MAKD,MALCA,MAKD,CACC,GAAMa,CAAAA,OAAO,CAAGjB,SAAS,EAAzB,CAEA,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,CAAgC,UAAU,CAAC,QAA3C,CAAoD,OAAO,CAAE,CAA7D,CAAgE,SAAS,CAAEiB,OAAO,CAACf,IAAnF,CAAyF,GAAG,CAAEa,GAA9F,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,eACI,oBAAC,MAAD,EAAQ,SAAS,CAAEE,OAAO,CAACxB,KAA3B,MADJ,CADJ,cAII,oBAAC,IAAD,EAAM,IAAI,KAAV,eACI,oBAAC,UAAD,EACI,SAAS,CAAC,IADd,CAEI,OAAO,CAAC,IAFZ,CAGI,KAAK,CAAC,QAHV,CAII,KAAK,CAAE,CAAEyB,QAAQ,CAAE,MAAZ,CAAoBC,UAAU,CAAE,GAAhC,CAJX,EAMKH,QANL,KADJ,CAJJ,CADJ,cAgBI,oBAAC,OAAD,EAAS,SAAS,CAAEC,OAAO,CAACP,OAA5B,EAhBJ,cAoBgB,oBAAC,IAAD,EAAM,SAAS,CAAEO,OAAO,CAACL,SAAzB,CAAoC,SAAS,KAA7C,CAA8C,OAAO,CAAE,CAAvD,eAEI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,SAAS,CAAEK,OAAO,CAACb,MAAtC,mCAFJ,cAMI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,eACF,2BAAO,uBAAuB,CAAE,CAAEgB,MAAM,YAAKhB,MAAL,CAAR,CAAhC,EADE,CANJ,CApBhB,CADJ,CAqCH","sourcesContent":["import React from \"react\";\nimport amber from \"@material-ui/core/colors/amber\";\nimport {Avatar,Grid,Typography,Divider} from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginTop: 10\n        },\n        answer: {\n          textDecoration:\"underline\"  \n        },\n        amber: {\n            color: theme.palette.getContrastText(amber[500]),\n            backgroundColor: amber[500],\n        },\n        divider: {\n            marginTop: theme.spacing(2),\n        },\n        container: {\n            padding: theme.spacing(1.5),\n        },\n    })\n);\n\nexport default function ItemComponent({\n  key,\n    question,\n    answer,\n}: {\n    key:number,\n    question: string,\n    answer: string,\n}) {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"row\" alignItems=\"center\" spacing={2} className={classes.root} key={key}>\n                <Grid item>\n                    <Avatar className={classes.amber}>Q</Avatar>\n                </Grid>\n                <Grid item>\n                    <Typography\n                        component=\"h1\"\n                        variant=\"h6\"\n                        align=\"center\"\n                        style={{ fontSize: \"1rem\", fontWeight: 600 }}\n                    >\n                        {question}?\n          </Typography>\n                </Grid>\n            </Grid>\n            <Divider className={classes.divider} />\n         \n     \n              \n                        <Grid className={classes.container} container spacing={0}>\n\n                            <Grid item xs={12} className={classes.answer}>\n                                คำตอบ\n                   \n                            </Grid>\n                            <Grid item xs={12}>\n                          <  div dangerouslySetInnerHTML={{ __html:` ${answer}` }} />\n                           \n                            </Grid>\n\n                        </Grid>\n \n\n        </React.Fragment>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}